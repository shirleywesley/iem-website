
@inherits UmbracoTemplatePage
@{
    // Model.Content is the current page that we're on
    // AncestorsOrSelf is all of the ancestors this page has in the tree
    // (1) means: go up to level 1 and stop looking for more ancestors when you get there
    // First() gets the first ancestor found (the home page, on level 1)
    var homePage = CurrentPage.AncestorsOrSelf(1).First();

}

<div class="wrapper">
    <!--=== Header ===-->
    <div class="header">
        <!-- /Header -->
        <div class="navbar navbar-default" role="navigation">
            <div class="container">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-responsive-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="fa fa-bars"></span>
                    </button>
                    <a class="navbar-brand" href="/">
                        @if (homePage.Media("logo") != null)
                        {
                            <img id="logo-header" src="@Umbraco.Media(@homePage.Logo).Url" alt="Logo" />
                        }
                    </a>
                </div>

                @* If the Url of the current page is "/" then we want to add the class "current_page_item" *@
                @* Otherwise, we set the class to null, that way it will not even be added to the <li> element *@
                <div class="collapse navbar-collapse navbar-responsive-collapse">
                    <ul class="nav navbar-nav">
                        <li class="@(CurrentPage.Url == "/" ? "active" : null)"><a href="/">@homePage.Name</a></li>
                        @foreach (var page in Model.Content.AncestorOrSelf(1).Children.Where("Visible"))
                        {
                            <li class="@(page.Children.Where("Visible").Any() ? "dropdown" : null)">
                                <a href="@(page.Children.Where("Visible").Any() ? "javascript:void(0);" : page.Url)">@page.Name</a>
                                @if (page.Children.Where("Visible").Any())
                                {
                                    <ul class="dropdown-menu">
                                        @foreach (var subpage in page.Children.Where("Visible"))
                                        {
                                            <li class="@(CurrentPage.Id == page.Id ? "active" : null)">
                                                <a href="@subpage.Url">@subpage.Name</a>

                                                @*@if (subpage.Children.Where("Visible").Any())
                                        {
                                            <ul class="dropdown-menu">
                                                @foreach (var subpageChild in subpage.Children.Where("Visible"))
                                                {
                                                    <li class="@(CurrentPage.Id == subpageChild.Id ? "active" : null)">
                                                        <a href="@subpageChild.Url">@subpageChild.Name</a>


                                                    </li>

                                                }
                                            </ul>
                                        }*@
                                            </li>
                                        }
                                    </ul>
                                }
                            </li>
                        }
                    </ul>
                </div>

            </div>
        </div>
    </div>
</div>